{"ast":null,"code":"var _jsxFileName = \"/home/acer/Downloads/employee-management-CRUD-web-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport EmployeeForm from './components/EmployeeForm';\nimport EmployeeList from './components/EmployeeList';\nimport DepartmentFilter from './components/DepartmentFilter';\nimport { getEmployees } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [filteredEmployees, setFilteredEmployees] = useState([]);\n  useEffect(() => {\n    fetchEmployees();\n  }, []);\n\n  // Function to fetch employees from the backend\n  const fetchEmployees = async () => {\n    const data = await getEmployees();\n    setEmployees(data);\n    setFilteredEmployees(data);\n  };\n  const handleFilter = department => {\n    if (department === 'All') {\n      setFilteredEmployees(employees);\n    } else {\n      setFilteredEmployees(employees.filter(emp => emp.department === department));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DepartmentFilter, {\n      onFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeForm, {\n      refreshEmployees: fetchEmployees\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(EmployeeList, {\n      employees: filteredEmployees,\n      refreshEmployees: fetchEmployees\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"oFQJENv1wAW5GMClSC0NvsygeIk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","EmployeeForm","EmployeeList","DepartmentFilter","getEmployees","jsxDEV","_jsxDEV","App","_s","employees","setEmployees","filteredEmployees","setFilteredEmployees","fetchEmployees","data","handleFilter","department","filter","emp","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilter","refreshEmployees","_c","$RefreshReg$"],"sources":["/home/acer/Downloads/employee-management-CRUD-web-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport EmployeeForm from './components/EmployeeForm';\nimport EmployeeList from './components/EmployeeList';\nimport DepartmentFilter from './components/DepartmentFilter';\nimport { getEmployees } from './services/api';\n\nconst App = () => {\n  const [employees, setEmployees] = useState([]);\n  const [filteredEmployees, setFilteredEmployees] = useState([]);\n\n  useEffect(() => {\n    fetchEmployees();\n  }, []);\n\n  // Function to fetch employees from the backend\n  const fetchEmployees = async () => {\n    const data = await getEmployees();\n    setEmployees(data);\n    setFilteredEmployees(data);\n  };\n\n  const handleFilter = (department) => {\n    if (department === 'All') {\n      setFilteredEmployees(employees);\n    } else {\n      setFilteredEmployees(employees.filter(emp => emp.department === department));\n    }\n  };\n\n  return (\n    <div>\n      <h1>Employee Management</h1>\n      <DepartmentFilter onFilter={handleFilter} />\n      <EmployeeForm refreshEmployees={fetchEmployees} />  {/* Pass refreshEmployees here too */}\n      <EmployeeList employees={filteredEmployees} refreshEmployees={fetchEmployees} />  {/* Pass refreshEmployees */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,SAASC,YAAY,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACda,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,IAAI,GAAG,MAAMV,YAAY,CAAC,CAAC;IACjCM,YAAY,CAACI,IAAI,CAAC;IAClBF,oBAAoB,CAACE,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAIC,UAAU,IAAK;IACnC,IAAIA,UAAU,KAAK,KAAK,EAAE;MACxBJ,oBAAoB,CAACH,SAAS,CAAC;IACjC,CAAC,MAAM;MACLG,oBAAoB,CAACH,SAAS,CAACQ,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACF,UAAU,KAAKA,UAAU,CAAC,CAAC;IAC9E;EACF,CAAC;EAED,oBACEV,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BjB,OAAA,CAACH,gBAAgB;MAACqB,QAAQ,EAAET;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CjB,OAAA,CAACL,YAAY;MAACwB,gBAAgB,EAAEZ;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,MAAE,eACpDjB,OAAA,CAACJ,YAAY;MAACO,SAAS,EAAEE,iBAAkB;MAACc,gBAAgB,EAAEZ;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,MAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/E,CAAC;AAEV,CAAC;AAACf,EAAA,CA/BID,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}